<ManagementPackFragment SchemaVersion="2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <TypeDefinitions>
    <EntityTypes>
      <ClassTypes>
        <ClassType ID="Simple.Windows.Printer.PrintServer.Printer" Accessibility="Public" Abstract="false" Base="Windows!Microsoft.Windows.ApplicationComponent" Hosted="true" Singleton="false" Extension="false">
          <Property ID="PrinterName" Type="string" AutoIncrement="false" Key="true" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="PrintServerHost" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="PortName" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="Location" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="Model" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
        </ClassType>
        <ClassType ID="Simple.Windows.Printer.PrintServer.Role" Accessibility="Public" Abstract="false" Base="Windows!Microsoft.Windows.ComputerRole" Hosted="true" Singleton="false" Extension="false">
          <Property ID="DisplayName" Type="string" AutoIncrement="false" Key="true" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
        </ClassType>
      </ClassTypes>
      <RelationshipTypes>
        <RelationshipType ID="Simple.Windows.Printer.PrintServer.Role.hosts.Windows.PrintServer.Printer" Accessibility="Internal" Abstract="false" Base="System!System.Hosting">
          <Source ID="Simple.Windows.Printer.PrintServer.Role.hosts.Windows.PrintServer.Printer.Source" MinCardinality="0" MaxCardinality="2147483647" Type="Simple.Windows.Printer.PrintServer.Role" />
          <Target ID="Simple.Windows.Printer.PrintServer.Role.hosts.Windows.PrintServer.Printer.Target" MinCardinality="0" MaxCardinality="2147483647" Type="Simple.Windows.Printer.PrintServer.Printer" />
        </RelationshipType>
      </RelationshipTypes>
    </EntityTypes>


    <ModuleTypes>
      <DataSourceModuleType ID="Simple.Windows.Printer.PrinterStateCheck.DS" Accessibility="Internal" Batching="false">
        <Configuration>
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="PrinterName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="UnknownErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="UnknownErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="OtherErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="OtherErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="NoErrorErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="NoErrorErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="LowPaperErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="LowPaperErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="NoPaperErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="NoPaperErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="LowTonerErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="LowTonerErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="NoTonerErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="NoTonerErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="DoorOpenErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="DoorOpenErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="JammedErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="JammedErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="OfflineErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="OfflineErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="ServiceRequestedErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="ServiceRequestedErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="OutputBinFullErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="OutputBinFullErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="Scheduler" TypeID="System!System.Scheduler">
                <Scheduler>
                  <SimpleReccuringSchedule>
                    <Interval>$Config/IntervalSeconds$</Interval>
                  </SimpleReccuringSchedule>
                  <ExcludeDates />
                </Scheduler>
              </DataSource>
              <ProbeAction ID="Probe" TypeID="Simple.Windows.Printer.PrinterStateCheck.PA">
                <UnknownErrorDetection_Enabled>$Config/UnknownErrorDetection_Enabled$</UnknownErrorDetection_Enabled>
                <UnknownErrorDetection_Threshold>$Config/UnknownErrorDetection_Threshold$</UnknownErrorDetection_Threshold>
                <OtherErrorDetection_Enabled>$Config/OtherErrorDetection_Enabled$</OtherErrorDetection_Enabled>
                <OtherErrorDetection_Threshold>$Config/OtherErrorDetection_Threshold$</OtherErrorDetection_Threshold>
                <NoErrorErrorDetection_Enabled>$Config/NoErrorErrorDetection_Enabled$</NoErrorErrorDetection_Enabled>
                <NoErrorErrorDetection_Threshold>$Config/NoErrorErrorDetection_Threshold$</NoErrorErrorDetection_Threshold>
                <LowPaperErrorDetection_Enabled>$Config/LowPaperErrorDetection_Enabled$</LowPaperErrorDetection_Enabled>
                <LowPaperErrorDetection_Threshold>$Config/LowPaperErrorDetection_Threshold$</LowPaperErrorDetection_Threshold>
                <NoPaperErrorDetection_Enabled>$Config/NoPaperErrorDetection_Enabled$</NoPaperErrorDetection_Enabled>
                <NoPaperErrorDetection_Threshold>$Config/NoPaperErrorDetection_Threshold$</NoPaperErrorDetection_Threshold>
                <LowTonerErrorDetection_Enabled>$Config/LowTonerErrorDetection_Enabled$</LowTonerErrorDetection_Enabled>
                <LowTonerErrorDetection_Threshold>$Config/LowTonerErrorDetection_Threshold$</LowTonerErrorDetection_Threshold>
                <NoTonerErrorDetection_Enabled>$Config/NoTonerErrorDetection_Enabled$</NoTonerErrorDetection_Enabled>
                <NoTonerErrorDetection_Threshold>$Config/NoTonerErrorDetection_Threshold$</NoTonerErrorDetection_Threshold>
                <DoorOpenErrorDetection_Enabled>$Config/DoorOpenErrorDetection_Enabled$</DoorOpenErrorDetection_Enabled>
                <DoorOpenErrorDetection_Threshold>$Config/DoorOpenErrorDetection_Threshold$</DoorOpenErrorDetection_Threshold>
                <JammedErrorDetection_Enabled>$Config/JammedErrorDetection_Enabled$</JammedErrorDetection_Enabled>
                <JammedErrorDetection_Threshold>$Config/JammedErrorDetection_Threshold$</JammedErrorDetection_Threshold>
                <OfflineErrorDetection_Enabled>$Config/OfflineErrorDetection_Enabled$</OfflineErrorDetection_Enabled>
                <OfflineErrorDetection_Threshold>$Config/OfflineErrorDetection_Threshold$</OfflineErrorDetection_Threshold>
                <ServiceRequestedErrorDetection_Enabled>$Config/ServiceRequestedErrorDetection_Enabled$</ServiceRequestedErrorDetection_Enabled>
                <ServiceRequestedErrorDetection_Threshold>$Config/ServiceRequestedErrorDetection_Threshold$</ServiceRequestedErrorDetection_Threshold>
                <OutputBinFullErrorDetection_Enabled>$Config/OutputBinFullErrorDetection_Enabled$</OutputBinFullErrorDetection_Enabled>
                <OutputBinFullErrorDetection_Threshold>$Config/OutputBinFullErrorDetection_Threshold$</OutputBinFullErrorDetection_Threshold>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              </ProbeAction>
              <ConditionDetection ID="InstanceFilter" TypeID="System!System.ExpressionFilter">
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery Type="String">Property[@Name='PrinterName']</XPathQuery>
                    </ValueExpression>
                    <Operator>Equal</Operator>
                    <ValueExpression>
                      <Value Type="String">$Config/PrinterName$</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
              </ConditionDetection>
            </MemberModules>
            <Composition>
              <Node ID="InstanceFilter">
                <Node ID="Probe">
                  <Node ID="Scheduler" />
                </Node>
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>
      <ProbeActionModuleType ID="Simple.Windows.Printer.PrinterStateCheck.PA" Accessibility="Internal" Batching="false" PassThrough="false">
        <Configuration>
          <xsd:element minOccurs="1" name="UnknownErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="UnknownErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="OtherErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="OtherErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="NoErrorErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="NoErrorErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="LowPaperErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="LowPaperErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="NoPaperErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="NoPaperErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="LowTonerErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="LowTonerErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="NoTonerErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="NoTonerErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="DoorOpenErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="DoorOpenErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="JammedErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="JammedErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="OfflineErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="OfflineErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="ServiceRequestedErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="ServiceRequestedErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="OutputBinFullErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="OutputBinFullErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <ProbeAction ID="PrinterStatePA" TypeID="Windows!Microsoft.Windows.ScriptPropertyBagProbe">
                <ScriptName>PrinterStateCheck.vbs</ScriptName>
                <Arguments>$Config/UnknownErrorDetection_Enabled$ $Config/UnknownErrorDetection_Threshold$ $Config/OtherErrorDetection_Enabled$ $Config/OtherErrorDetection_Threshold$ $Config/NoErrorErrorDetection_Enabled$ $Config/NoErrorErrorDetection_Threshold$ $Config/LowPaperErrorDetection_Enabled$ $Config/LowPaperErrorDetection_Threshold$ $Config/NoPaperErrorDetection_Enabled$ $Config/NoPaperErrorDetection_Threshold$ $Config/LowTonerErrorDetection_Enabled$ $Config/LowTonerErrorDetection_Threshold$ $Config/NoTonerErrorDetection_Enabled$ $Config/NoTonerErrorDetection_Threshold$ $Config/DoorOpenErrorDetection_Enabled$ $Config/DoorOpenErrorDetection_Threshold$ $Config/JammedErrorDetection_Enabled$ $Config/JammedErrorDetection_Threshold$ $Config/OfflineErrorDetection_Enabled$ $Config/OfflineErrorDetection_Threshold$ $Config/ServiceRequestedErrorDetection_Enabled$ $Config/ServiceRequestedErrorDetection_Threshold$ $Config/OutputBinFullErrorDetection_Enabled$ $Config/OutputBinFullErrorDetection_Threshold$ </Arguments>
                <ScriptBody>
                  SetLocale("en-us")

                  Dim objWMIPrinters, colItems, oPrinter, ErrorStateToString, oAPI, oBag, WshShell, oEventCreateCmd, PrinterState
                  Dim PrinterStateRegPath, DataIn, DataOut, SLength, PrinterError, ErrorTime, ErrorandDate, StateRegPath
                  Dim PBState, PrinterName, DetectedError, oArgs
                  Dim Err1Enabled, Err1Threshold, Err2Enabled, Err2Threshold, Err3Enabled, Err3Threshold, Err4Enabled, Err4Threshold
                  Dim Err5Enabled, Err5Threshold, Err6Enabled, Err6Threshold, Err7Enabled, Err7Threshold, Err8Enabled, Err8Threshold
                  Dim Err9Enabled, Err9Threshold, Err10Enabled, Err10Threshold, Err11Enabled, Err11Threshold, Err12Enabled, Err12Threshold

                  On Error Resume Next

                  Set WshShell = CreateObject("WScript.Shell")

                  'Read in variables from command line to determine which printer checks are relevant and the associated time frame for alerting
                  Set oArgs = wscript.Arguments
                  Err1Enabled = oArgs(0)
                  Err1Threshold = oArgs(1)
                  Err2Enabled = oArgs(2)
                  Err2Threshold = oArgs(3)
                  Err4Enabled = oArgs(6)
                  Err4Threshold = oArgs(7)
                  Err5Enabled = oArgs(8)
                  Err5Threshold = oArgs(9)
                  Err6Enabled = oArgs(10)
                  Err6Threshold = oArgs(11)
                  Err7Enabled = oArgs(12)
                  Err7Threshold = oArgs(13)
                  Err8Enabled = oArgs(14)
                  Err8Threshold = oArgs(15)
                  Err9Enabled = oArgs(16)
                  Err9Threshold = oArgs(17)
                  Err10Enabled = oArgs(18)
                  Err10Threshold = oArgs(19)
                  Err11Enabled = oArgs(20)
                  Err11Threshold = oArgs(21)
                  Err12Enabled = oArgs(22)
                  Err12Threshold = oArgs(23)

                  'Instantiate objects and declare variables needed in the script
                  Set oAPI = CreateObject("MOM.ScriptAPI")
                  Set objWMIPrinters = GetObject("winmgmts://./root/cimv2")
                  Set colItems = objWMIPrinters.ExecQuery("Select * from Win32_Printer")
                  StateRegPath = oAPI.GetScriptStateKeyPath("PrinterState")
                  PrinterStateRegPath = "HKLM\" &amp; StateRegPath

                  'Loop through all printers and handle individually.
                  For each oPrinter in colItems
                  Set PrinterState = New PrinterStateClass
                  'SET TO True and 1 FOR TESTING, False and 0 FOR PRODUCTION
                  If oPrinter.Shared = "False" or oPrinter.Shared = 0 Then
                  Call PrinterState.PutState(oPrinter.Name, "Not Shared")
                  Else
                  Select Case (oPrinter.DetectedErrorState)
                  Case 1: ErrorStateToString = "Unknown"
                  Case 2: ErrorStateToString = "Other"
                  Case 3: ErrorStateToString = "No Error"
                  Case 4: ErrorStateToString = "Low Paper"
                  Case 5: ErrorStateToString = "No Paper"
                  Case 6: ErrorStateToString = "Low Toner"
                  Case 7: ErrorStateToString = "No Toner"
                  Case 8: ErrorStateToString = "Door Open"
                  Case 9: ErrorStateToString = "Jammed"
                  Case 10: ErrorStateToString = "Offline"
                  Case 11: ErrorStateToString = "Service Requested"
                  Case 12: ErrorStateToString = "Output Bin Full"
                  Case Else: ErrorStateToString = "No Error"
                  End Select

                  'A detectederrorstate value of 10 equals offline but printers are showing healthy or unhealthy but never listed as
                  'offline.  The Extendederrorstate field seems to be what is used in the printer UI to show a printer that is truly
                  'offline so double checking here and forcing offline if extendederrorstate shows that it is.
                  If oPrinter.ExtendedPrinterStatus = 7 Then
                  ErrorStateToString = "Offline"
                  End If

                  If (ErrorStateToString = "No Error") Then
                  Call PrinterState.PutState(oPrinter.Name, "OK")
                  Call WritePropertyBag("OK", oPrinter.Name, "No Error")
                  Else
                  DataOut = PrinterState.GetState (oPrinter.Name) 'If DataOut somehow equals OK or a string without '-'
                  'the date attached functions will fail.  Further, if
                  'DataOut doesn't find a match to printer name it will
                  'simply return empty which is why the test below is done
                  'If no previuos error - update with error
                  If DataOut = "" or DataOut = "OK" Then
                  ErrorandDate = ErrorStateToString &amp; "-" &amp; Now
                  Call PrinterState.PutState(OPrinter.Name, ErrorandDate)
                  Else
                  'We have an error - check last recorded error against current error.  If they are different, update with
                  'the current error and reset timestamp.
                  If RTrim(LTrim(Left(DataOut, (InStr(DataOut, "-")-1)))) &lt;&gt; ErrorStateToString Then
                  ErrorandDate = ErrorStateToString &amp; "-" &amp; Now
                  Call PrinterState.PutState(OPrinter.Name, ErrorandDate)

                  'The error state has changed - pull the new error state.
                  DataOut=PrinterState.GetState (oPrinter.Name)
                  End If

                  'Break DataOut value apart and test whether to alert
                  sLength = InStr(DataOut, "-")
                  PrinterError = Left(DataOut, sLength-1)
                  ErrorTime = Right(DataOut, Len(Dataout)-sLength)
                  PrinterError = LTrim(PrinterError)
                  PrinterError = RTrim(PrinterError)
                  ErrorTime = LTrim(ErrorTime)
                  ErrorTime = RTrim(ErrorTime)

                  Select Case (PrinterError)
                  'Comparing errors to determine if detection is enabled and threshold time has passed.
                  'Testing threshold &gt;= to cover for scenarios where the threshold is exactly met.
                  Case "Unknown"
                  If Err1Enabled = 1 and (cint(abs(DateDiff("h",now,ErrorTime))) &gt;= cint(Err1Threshold)) Then
                  Call WritePropertyBag("WARNING", oPrinter.name, PrinterError)
                  Else
                  PrinterError = "ErrorNoAlert"
                  Call WritePropertyBag("OK", oPrinter.name, PrinterError)
                  End If
                  Case "Other"
                  If Err2Enabled = 1 and (cint(abs(DateDiff("h",now,ErrorTime))) &gt;= cint(Err2Threshold)) Then
                  Call WritePropertyBag("WARNING", oPrinter.name, PrinterError)
                  Else
                  PrinterError = "ErrorNoAlert"
                  Call WritePropertyBag("OK", oPrinter.name, PrinterError)
                  End If
                  'Including here but we should never hit this section in the event of no error condition being detected so
                  'commenting out for now. In fact, "Err3Enabled" value is not even assigned from incoming arguments.
                  'Case "No Error"
                  '	If Err3Enabled = 1 and (cint(abs(DateDiff("h",now,ErrorTime))) &gt;= cint(Err3Threshold)) Then
                  '		Call WritePropertyBag("WARNING", oPrinter.name, PrinterError)
                  '	Else
                  '		PrinterError = "ErrorNoAlert"
                  '		Call WritePropertyBag("OK", oPrinter.name, PrinterError)
                  '	End If
                  Case "Low Paper"
                  If Err4Enabled = 1 and (cint(abs(DateDiff("h",now,ErrorTime))) &gt;= cint(Err4Threshold)) Then
                  Call WritePropertyBag("WARNING", oPrinter.name, PrinterError)
                  Else
                  PrinterError = "ErrorNoAlert"
                  Call WritePropertyBag("OK", oPrinter.name, PrinterError)
                  End If
                  Case "No Paper"
                  If Err5Enabled = 1 and (cint(abs(DateDiff("h",now,ErrorTime))) &gt;= cint(Err5Threshold)) Then
                  Call WritePropertyBag("WARNING", oPrinter.name, PrinterError)
                  Else
                  PrinterError = "ErrorNoAlert"
                  Call WritePropertyBag("OK", oPrinter.name, PrinterError)
                  End If
                  Case "Low Toner"
                  If Err6Enabled = 1 and (cint(abs(DateDiff("h",now,ErrorTime))) &gt;= cint(Err6Threshold)) Then
                  Call WritePropertyBag("WARNING", oPrinter.name, PrinterError)
                  Else
                  PrinterError = "ErrorNoAlert"
                  Call WritePropertyBag("OK", oPrinter.name, PrinterError)
                  End If
                  Case "No Toner"
                  If Err7Enabled = 1 and (cint(abs(DateDiff("h",now,ErrorTime))) &gt;= cint(Err7Threshold)) Then
                  Call WritePropertyBag("WARNING", oPrinter.name, PrinterError)
                  Else
                  PrinterError = "ErrorNoAlert"
                  Call WritePropertyBag("OK", oPrinter.name, PrinterError)
                  End If
                  Case "Door Open"
                  If Err8Enabled = 1 and (cint(abs(DateDiff("h",now,ErrorTime))) &gt;= cint(Err8Threshold)) Then
                  Call WritePropertyBag("WARNING", oPrinter.name, PrinterError)
                  Else
                  PrinterError = "ErrorNoAlert"
                  Call WritePropertyBag("OK", oPrinter.name, PrinterError)
                  End If
                  Case "Jammed"
                  If Err9Enabled = 1 and (cint(abs(DateDiff("h",now,ErrorTime))) &gt;= cint(Err9Threshold)) Then
                  Call WritePropertyBag("WARNING", oPrinter.name, PrinterError)
                  Else
                  PrinterError = "ErrorNoAlert"
                  Call WritePropertyBag("OK", oPrinter.name, PrinterError)
                  End If
                  Case "Offline"
                  If Err11Enabled = 1 and (cint(abs(DateDiff("h",now,ErrorTime))) &gt;= cint(Err10Threshold)) Then
                  Call WritePropertyBag("WARNING", oPrinter.name, PrinterError)
                  Else
                  PrinterError = "ErrorNoAlert"
                  Call WritePropertyBag("OK", oPrinter.name, PrinterError)
                  End If
                  Case "Service Requested"
                  If Err12Enabled = 1 and (cint(abs(DateDiff("h",now,ErrorTime))) &gt;= cint(Err11Threshold)) Then
                  Call WritePropertyBag("WARNING", oPrinter.name, PrinterError)
                  Else
                  PrinterError = "ErrorNoAlert"
                  Call WritePropertyBag("OK", oPrinter.name, PrinterError)
                  End If
                  Case "Output Bin Full"
                  If Err13Enabled = 1 and (cint(abs(DateDiff("h",now,ErrorTime))) &gt;= cint(Err12Threshold)) Then
                  Call WritePropertyBag("WARNING", oPrinter.name, PrinterError)
                  Else
                  PrinterError = "ErrorNoAlert"
                  Call WritePropertyBag("OK", oPrinter.name, PrinterError)
                  End If
                  End Select
                  End If
                  End IF
                  End If
                  Next

                  'Return a property bag always
                  oAPI.ReturnItems

                  'Subroutine to handle adding items to the property bag
                  PUblic Sub WritePropertyBag(PBState, PrinterName, DetectedError)
                  set oBag = oAPI.CreatePropertyBag()
                  oBag.AddValue "State",PBState
                  oBag.AddValue "PrinterName", PrinterName
                  oBag.AddValue "Error Condition", DetectedError
                  oAPI.AddItem oBag
                  End Sub

                  'Class for placing printer state in the registry
                  class PrinterStateClass
                  public Sub PutState(stateName, val)
                  call WshShell.RegWrite (PrinterStateRegPath &amp; "\" &amp; stateName, val, "REG_SZ")
                  End Sub

                  public function GetState(stateName)
                  GetState = WshShell.RegRead(PrinterStateRegPath &amp; "\" &amp; stateName)
                  end function

                  End Class
                </ScriptBody>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="PrinterStatePA" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
        <InputType>System!System.BaseData</InputType>
      </ProbeActionModuleType>
    </ModuleTypes>
    <MonitorTypes>
      <UnitMonitorType ID="Simple.Windows.Printer.PrinterState.MT" Accessibility="Internal">
        <MonitorTypeStates>
          <MonitorTypeState ID="PrinterHealthy" NoDetection="false" />
          <MonitorTypeState ID="PrinterWarning" NoDetection="false" />
        </MonitorTypeStates>
        <Configuration>
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="PrinterName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="UnknownErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="UnknownErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="OtherErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="OtherErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="NoErrorErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="NoErrorErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="LowPaperErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="LowPaperErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="NoPaperErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="NoPaperErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="LowTonerErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="LowTonerErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="NoTonerErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="NoTonerErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="DoorOpenErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="DoorOpenErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="JammedErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="JammedErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="OfflineErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="OfflineErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="ServiceRequestedErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="ServiceRequestedErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="OutputBinFullErrorDetection_Enabled" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="OutputBinFullErrorDetection_Threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="ScriptIntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="UnknownErrorDetectionEnabled" Selector="$Config/UnknownErrorDetection_Enabled$" ParameterType="int" />
          <OverrideableParameter ID="UnknownErrorDetectionThreshold" Selector="$Config/UnknownErrorDetection_Threshold$" ParameterType="int" />
          <OverrideableParameter ID="OtherErrorDetectionEnabled" Selector="$Config/UnknownErrorDetection_Enabled$" ParameterType="int" />
          <OverrideableParameter ID="OtherErrorDetectionThreshold" Selector="$Config/UnknownErrorDetection_Threshold$" ParameterType="int" />
          <OverrideableParameter ID="NoErrorErrorDetectionEnabled" Selector="$Config/UnknownErrorDetection_Enabled$" ParameterType="int" />
          <OverrideableParameter ID="NoErrorErrorDetectionThreshold" Selector="$Config/UnknownErrorDetection_Threshold$" ParameterType="int" />
          <OverrideableParameter ID="LowPaperErrorDetectionEnabled" Selector="$Config/UnknownErrorDetection_Enabled$" ParameterType="int" />
          <OverrideableParameter ID="LowPaperErrorDetectionThreshold" Selector="$Config/UnknownErrorDetection_Threshold$" ParameterType="int" />
          <OverrideableParameter ID="NoPaperErrorDetectionEnabled" Selector="$Config/UnknownErrorDetection_Enabled$" ParameterType="int" />
          <OverrideableParameter ID="NoPaperErrorDetectionThreshold" Selector="$Config/UnknownErrorDetection_Threshold$" ParameterType="int" />
          <OverrideableParameter ID="LowTonerErrorDetectionEnabled" Selector="$Config/UnknownErrorDetection_Enabled$" ParameterType="int" />
          <OverrideableParameter ID="LowTonerErrorDetectionThreshold" Selector="$Config/UnknownErrorDetection_Threshold$" ParameterType="int" />
          <OverrideableParameter ID="NoTonerErrorDetectionEnabled" Selector="$Config/UnknownErrorDetection_Enabled$" ParameterType="int" />
          <OverrideableParameter ID="NoTonerErrorDetectionThreshold" Selector="$Config/UnknownErrorDetection_Threshold$" ParameterType="int" />
          <OverrideableParameter ID="DoorOpenErrorDetectionEnabled" Selector="$Config/UnknownErrorDetection_Enabled$" ParameterType="int" />
          <OverrideableParameter ID="DoorOpenErrorDetectionThreshold" Selector="$Config/UnknownErrorDetection_Threshold$" ParameterType="int" />
          <OverrideableParameter ID="JammedErrorDetectionEnabled" Selector="$Config/UnknownErrorDetection_Enabled$" ParameterType="int" />
          <OverrideableParameter ID="JammedErrorDetectionThreshold" Selector="$Config/UnknownErrorDetection_Threshold$" ParameterType="int" />
          <OverrideableParameter ID="OfflineErrorDetectionEnabled" Selector="$Config/UnknownErrorDetection_Enabled$" ParameterType="int" />
          <OverrideableParameter ID="OfflineErrorDetectionThreshold" Selector="$Config/UnknownErrorDetection_Threshold$" ParameterType="int" />
          <OverrideableParameter ID="ServiceRequestedErrorDetectionEnabled" Selector="$Config/UnknownErrorDetection_Enabled$" ParameterType="int" />
          <OverrideableParameter ID="ServiceRequestedErrorDetectionThreshold" Selector="$Config/UnknownErrorDetection_Threshold$" ParameterType="int" />
          <OverrideableParameter ID="OutputBinFullErrorDetectionEnabled" Selector="$Config/UnknownErrorDetection_Enabled$" ParameterType="int" />
          <OverrideableParameter ID="OutputBinFullErrorDetectionThreshold" Selector="$Config/UnknownErrorDetection_Threshold$" ParameterType="int" />
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="PrinterStateDS" TypeID="Simple.Windows.Printer.PrinterStateCheck.DS">
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <PrinterName>$Config/PrinterName$</PrinterName>
              <UnknownErrorDetection_Enabled>$Config/UnknownErrorDetection_Enabled$</UnknownErrorDetection_Enabled>
              <UnknownErrorDetection_Threshold>$Config/UnknownErrorDetection_Threshold$</UnknownErrorDetection_Threshold>
              <OtherErrorDetection_Enabled>$Config/OtherErrorDetection_Enabled$</OtherErrorDetection_Enabled>
              <OtherErrorDetection_Threshold>$Config/OtherErrorDetection_Threshold$</OtherErrorDetection_Threshold>
              <NoErrorErrorDetection_Enabled>$Config/NoErrorErrorDetection_Enabled$</NoErrorErrorDetection_Enabled>
              <NoErrorErrorDetection_Threshold>$Config/NoErrorErrorDetection_Threshold$</NoErrorErrorDetection_Threshold>
              <LowPaperErrorDetection_Enabled>$Config/LowPaperErrorDetection_Enabled$</LowPaperErrorDetection_Enabled>
              <LowPaperErrorDetection_Threshold>$Config/LowPaperErrorDetection_Threshold$</LowPaperErrorDetection_Threshold>
              <NoPaperErrorDetection_Enabled>$Config/NoPaperErrorDetection_Enabled$</NoPaperErrorDetection_Enabled>
              <NoPaperErrorDetection_Threshold>$Config/NoPaperErrorDetection_Threshold$</NoPaperErrorDetection_Threshold>
              <LowTonerErrorDetection_Enabled>$Config/LowTonerErrorDetection_Enabled$</LowTonerErrorDetection_Enabled>
              <LowTonerErrorDetection_Threshold>$Config/LowTonerErrorDetection_Threshold$</LowTonerErrorDetection_Threshold>
              <NoTonerErrorDetection_Enabled>$Config/NoTonerErrorDetection_Enabled$</NoTonerErrorDetection_Enabled>
              <NoTonerErrorDetection_Threshold>$Config/NoTonerErrorDetection_Threshold$</NoTonerErrorDetection_Threshold>
              <DoorOpenErrorDetection_Enabled>$Config/DoorOpenErrorDetection_Enabled$</DoorOpenErrorDetection_Enabled>
              <DoorOpenErrorDetection_Threshold>$Config/DoorOpenErrorDetection_Threshold$</DoorOpenErrorDetection_Threshold>
              <JammedErrorDetection_Enabled>$Config/JammedErrorDetection_Enabled$</JammedErrorDetection_Enabled>
              <JammedErrorDetection_Threshold>$Config/JammedErrorDetection_Threshold$</JammedErrorDetection_Threshold>
              <OfflineErrorDetection_Enabled>$Config/OfflineErrorDetection_Enabled$</OfflineErrorDetection_Enabled>
              <OfflineErrorDetection_Threshold>$Config/OfflineErrorDetection_Threshold$</OfflineErrorDetection_Threshold>
              <ServiceRequestedErrorDetection_Enabled>$Config/ServiceRequestedErrorDetection_Enabled$</ServiceRequestedErrorDetection_Enabled>
              <ServiceRequestedErrorDetection_Threshold>$Config/ServiceRequestedErrorDetection_Threshold$</ServiceRequestedErrorDetection_Threshold>
              <OutputBinFullErrorDetection_Enabled>$Config/OutputBinFullErrorDetection_Enabled$</OutputBinFullErrorDetection_Enabled>
              <OutputBinFullErrorDetection_Threshold>$Config/OutputBinFullErrorDetection_Threshold$</OutputBinFullErrorDetection_Threshold>
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
            </DataSource>
            <ProbeAction ID="PassThru" TypeID="System!System.PassThroughProbe" />
            <ProbeAction ID="OnDemand" TypeID="Simple.Windows.Printer.PrinterStateCheck.PA">
              <UnknownErrorDetection_Enabled>$Config/UnknownErrorDetection_Enabled$</UnknownErrorDetection_Enabled>
              <UnknownErrorDetection_Threshold>$Config/UnknownErrorDetection_Threshold$</UnknownErrorDetection_Threshold>
              <OtherErrorDetection_Enabled>$Config/OtherErrorDetection_Enabled$</OtherErrorDetection_Enabled>
              <OtherErrorDetection_Threshold>$Config/OtherErrorDetection_Threshold$</OtherErrorDetection_Threshold>
              <NoErrorErrorDetection_Enabled>$Config/NoErrorErrorDetection_Enabled$</NoErrorErrorDetection_Enabled>
              <NoErrorErrorDetection_Threshold>$Config/NoErrorErrorDetection_Threshold$</NoErrorErrorDetection_Threshold>
              <LowPaperErrorDetection_Enabled>$Config/LowPaperErrorDetection_Enabled$</LowPaperErrorDetection_Enabled>
              <LowPaperErrorDetection_Threshold>$Config/LowPaperErrorDetection_Threshold$</LowPaperErrorDetection_Threshold>
              <NoPaperErrorDetection_Enabled>$Config/NoPaperErrorDetection_Enabled$</NoPaperErrorDetection_Enabled>
              <NoPaperErrorDetection_Threshold>$Config/NoPaperErrorDetection_Threshold$</NoPaperErrorDetection_Threshold>
              <LowTonerErrorDetection_Enabled>$Config/LowTonerErrorDetection_Enabled$</LowTonerErrorDetection_Enabled>
              <LowTonerErrorDetection_Threshold>$Config/LowTonerErrorDetection_Threshold$</LowTonerErrorDetection_Threshold>
              <NoTonerErrorDetection_Enabled>$Config/NoTonerErrorDetection_Enabled$</NoTonerErrorDetection_Enabled>
              <NoTonerErrorDetection_Threshold>$Config/NoTonerErrorDetection_Threshold$</NoTonerErrorDetection_Threshold>
              <DoorOpenErrorDetection_Enabled>$Config/DoorOpenErrorDetection_Enabled$</DoorOpenErrorDetection_Enabled>
              <DoorOpenErrorDetection_Threshold>$Config/DoorOpenErrorDetection_Threshold$</DoorOpenErrorDetection_Threshold>
              <JammedErrorDetection_Enabled>$Config/JammedErrorDetection_Enabled$</JammedErrorDetection_Enabled>
              <JammedErrorDetection_Threshold>$Config/JammedErrorDetection_Threshold$</JammedErrorDetection_Threshold>
              <OfflineErrorDetection_Enabled>$Config/OfflineErrorDetection_Enabled$</OfflineErrorDetection_Enabled>
              <OfflineErrorDetection_Threshold>$Config/OfflineErrorDetection_Threshold$</OfflineErrorDetection_Threshold>
              <ServiceRequestedErrorDetection_Enabled>$Config/ServiceRequestedErrorDetection_Enabled$</ServiceRequestedErrorDetection_Enabled>
              <ServiceRequestedErrorDetection_Threshold>$Config/ServiceRequestedErrorDetection_Threshold$</ServiceRequestedErrorDetection_Threshold>
              <OutputBinFullErrorDetection_Enabled>$Config/OutputBinFullErrorDetection_Enabled$</OutputBinFullErrorDetection_Enabled>
              <OutputBinFullErrorDetection_Threshold>$Config/OutputBinFullErrorDetection_Threshold$</OutputBinFullErrorDetection_Threshold>
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
            </ProbeAction>
            <ConditionDetection ID="CDHealthy" TypeID="System!System.ExpressionFilter">
              <Expression>
                <And>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <XPathQuery Type="String">Property[@Name='State']</XPathQuery>
                      </ValueExpression>
                      <Operator>Equal</Operator>
                      <ValueExpression>
                        <Value Type="String">OK</Value>
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <XPathQuery Type="String">Property[@Name='PrinterName']</XPathQuery>
                      </ValueExpression>
                      <Operator>Equal</Operator>
                      <ValueExpression>
                        <Value Type="String">$Config/PrinterName$</Value>
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                </And>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="CDWarning" TypeID="System!System.ExpressionFilter">
              <Expression>
                <And>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <XPathQuery Type="String">Property[@Name='State']</XPathQuery>
                      </ValueExpression>
                      <Operator>Equal</Operator>
                      <ValueExpression>
                        <Value Type="String">WARNING</Value>
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <XPathQuery Type="String">Property[@Name='PrinterName']</XPathQuery>
                      </ValueExpression>
                      <Operator>Equal</Operator>
                      <ValueExpression>
                        <Value Type="String">$Config/PrinterName$</Value>
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                </And>
              </Expression>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="PrinterHealthy">
              <Node ID="CDHealthy">
                <Node ID="PrinterStateDS" />
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="PrinterWarning">
              <Node ID="CDWarning">
                <Node ID="PrinterStateDS" />
              </Node>
            </RegularDetection>
          </RegularDetections>
          <OnDemandDetections>
            <OnDemandDetection MonitorTypeStateID="PrinterHealthy">
              <Node ID="CDHealthy">
                <Node ID="OnDemand">
                  <Node ID="PassThru" />
                </Node>
              </Node>
            </OnDemandDetection>
            <OnDemandDetection MonitorTypeStateID="PrinterWarning">
              <Node ID="CDWarning">
                <Node ID="OnDemand">
                  <Node ID="PassThru" />
                </Node>
              </Node>
            </OnDemandDetection>
          </OnDemandDetections>
        </MonitorImplementation>
      </UnitMonitorType>
    </MonitorTypes>
  </TypeDefinitions>
</ManagementPackFragment>
